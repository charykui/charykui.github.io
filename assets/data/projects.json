{
  "Security": {
    "email-security": {
      "title": "Secure Email Solutions",
      "description": "Implemented SPF, DKIM and DMARC records to protect domain email integrity. Analyzed DMARC reports to detect and prevent spoofing attempts.",
      "objective": "Gain hands-on experience securing business email systems against spoofing and phishing attacks.",
      "steps": [
        "Registered a custom domain on Namecheap.",
        "Set up Zoho Mail as the business email hosting provider.",
        "Configured SPF (Sender Policy Framework): Specifies authorized mail servers allowed to send emails on behalf of the domain.",
        "Configured DKIM (DomainKeys Identified Mail): Enabled digital signing of outgoing messages to verify authenticity and prevent tampering.",
        "Configured DMARC (Domain-based Message Authentication, Reporting and Conformance): Defined domain policies for handling emails that fail SPF or DKIM validation, and enabled reporting for visibility into spoofing activity.",
        "Validated configurations using tools such as MXToolBox, Mail-Tester and by inspecting raw email headers for SPF, DKIM and DMARC results."
      ],
      "results": "Successfully secured the domainâ€™s email system against spoofing and phishing. Validation tests confirmed SPF=pass, DKIM=pass, and DMARC=pass in email headers.",

  "screenshots": [
    "assets/images/email.png"
  ],
  "video": "https://www.youtube.com/embed/zXpGgv2I9yo"
}
},
"Cloud": {
  "azure-deployment": {
    "title": "Azure Resource Deployment",
    "description": "Infrastructure as Code project deploying Azure resources.",
    "objective": "Automate Azure deployments using ARM templates & Bicep.",
    "steps": [
      "Created ARM templates for VM and storage setup.",
      "Parameterized deployment for reusability.",
      "Validated deployment with Azure CLI."
    ],
    "results": "Successfully deployed a scalable VM + storage setup in Azure.",
    "screenshots": [
      "assets/projects/azure-ad-setup.png",
      "assets/projects/azure-ad-dashboard.png"
    ],
    "video": "https://www.youtube.com/embed/your-video-id"
  },
  "cloud-backup": {
    "title": "Cloud Backup & Recovery",
    "description": "Configured Azure Backup and tested VM restore.",
    "objective": "Ensure disaster recovery with Azure Backup.",
    "steps": [
      "Configured Azure Backup vault.",
      "Backed up Windows VM.",
      "Tested restore to verify process."
    ],
    "results": "VM restore completed successfully within RTO/RPO limits.",
    "screenshots": [
      "assets/projects/cloud-backup.png",
      "assets/projects/cloud-restore.png"
    ],
    "video": "https://www.youtube.com/embed/your-video-id"
  }
},
"SIEM": {
  "splunk": {
    "title": "Splunk Log Analysis",
    "description": "Detected anomalies in system logs with dashboards.",
    "objective": "Practice log analysis with SIEM tools.",
    "steps": [
      "Installed Splunk server.",
      "Configured log ingestion.",
      "Created dashboards for monitoring."
    ],
    "results": "Detected suspicious login attempts from attacker IP.",
    "screenshots": [
      "assets/labs/siem-log.png",
      "assets/labs/siem-dashboard.png"
    ],
    "video": "https://www.youtube.com/embed/your-video-id"
  }
},
"Pentest": {
  "web-pentest": {
    "title": "Web Application Pentest",
    "description": "OWASP Top 10 assessment using Burp Suite.",
    "objective": "Identify and exploit web vulnerabilities in a test app.",
    "steps": [
      "Mapped web application structure.",
      "Exploited SQL Injection & XSS.",
      "Reported vulnerabilities with remediation steps."
    ],
    "results": "Multiple OWASP Top 10 issues identified and patched.",
    "screenshots": [
      "assets/labs/web-pentest-1.png",
      "assets/labs/web-pentest-2.png"
    ],
    "video": "https://www.youtube.com/embed/9hwCNxYagy0"
  }

},
"Vulnerability Management": {
  "openvas-docker": {
    "title": "Installation and use of Openvas inside Docker",
    "description": "Installing docker then OpenVas and testing by checking for  vulnerabilities",
    "objective": "Learn how to set up OpenVAS using Docker to streamline the installation process and conduct vulnerability scans using OpenVAS then interpret the results",
    "steps": [
      "Install Docker on Linux-based(Kali Linux) virtual machine",
      "Set up a Windows virtual machine( Windows 7, which will serve as the target for the vulnerability scan.",
      "Use OpenVAS to conduct a vulnerability scan on the Windows virtual machine",
      "Reported vulnerabilities with remediation steps."
    ],
    "results": "OpenVAS loads over 40,000 NVTs and over 100,000 CVEs. Each vulnerability is assigned a different severity level.",
    "screenshots": [
      "assets/labs/web-pentest-1.png",
      "assets/labs/web-pentest-2.png"
    ],
    "video": "https://www.canva.com/design/DAG0cPmT-Wg/rB4iTnWUXAfSgGvSJtUXNg/watch"
  }

}
}
